STACK_A=(3 2 1)
#STACK_A=(8 7 6 5 4 3 2 1)
STACK_B=()
STACK_C=()
MOVE_NUMBER=1

WIN_SEQUENCE=(3 2 1)
#WIN_SEQUENCE=(8 7 6 5 4 3 2 1)

print_stacks() {
    clear
    echo "Ход: $MOVE_NUMBER"
    
    # Вывод стека A (вершина сверху)
    echo "Стек A:"
    for ((i=${#STACK_A[@]}-1; i>=0; i--)); do
        echo "${STACK_A[i]}"
    done
    
    # Вывод стека B (вершина сверху)
    echo "Стек B:"
    for ((i=${#STACK_B[@]}-1; i>=0; i--)); do
        echo "${STACK_B[i]}"
    done
    
    # Вывод стека C (вершина сверху)
    echo "Стек C:"
    for ((i=${#STACK_C[@]}-1; i>=0; i--)); do
        echo "${STACK_C[i]}"
    done
}

check_win() {
    [[ "${STACK_B[*]}" == "${WIN_SEQUENCE[*]}" ]] || [[ "${STACK_C[*]}" == "${WIN_SEQUENCE[*]}" ]]
}

move_disk() {
    local from=$1 to=$2
    local -n from_stack="STACK_$from"
    local -n to_stack="STACK_$to"

    # Проверка пустого стека-источника
    if [ ${#from_stack[@]} -eq 0 ]; then
        echo "Ошибка: стек $from пуст!"
        return 1
    fi

    # Получаем верхний элемент
    local from_top="${from_stack[-1]}"
    local to_top="${to_stack[-1]}"

    # Проверка правила перемещения
    if [ -n "$to_top" ] && [ "$from_top" -gt "$to_top" ]; then
        echo "Ошибка: нельзя положить $from_top на $to_top!"
        return 1
    fi

    # Перемещение элемента
    to_stack+=("$from_top")
    unset 'from_stack[-1]'
    return 0
}

trap 'echo -e "\nДля выхода введите Q"' SIGINT

while true; do
    print_stacks
    
    if check_win; then
        echo "Победа за $MOVE_NUMBER ходов"
        exit 0
    fi

    read -p "Введите исходный и целевой стек (например AB) или Q: " input
    input=${input^^}

    [[ "$input" == "Q" ]] && exit 0

    if [[ "${#input}" != 2 || ! "$input" =~ ^[ABC]{2}$ ]]; then
        echo "Некорректный ввод! Используйте два символа (A, B, C). Например: AB"
        read -p "Нажмите Enter..."
        continue
    fi

    FROM_STACK_NAME="${input:0:1}"
    TO_STACK_NAME="${input:1:1}"

    if move_disk "$FROM_STACK_NAME" "$TO_STACK_NAME"; then
        ((MOVE_NUMBER++))
    else
        read -p "Ошибка. Нажмите Enter..."
    fi
done
